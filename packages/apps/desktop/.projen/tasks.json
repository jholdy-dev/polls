{
  "tasks": {
    "compile": {
      "name": "compile",
      "description": "Only compile",
      "steps": [
        {
          "exec": "tsc --build"
        }
      ]
    },
    "default": {
      "name": "default",
      "description": "Synthesize project files",
      "steps": [
        {
          "exec": "npx projen default",
          "cwd": "../../.."
        }
      ]
    },
    "install": {
      "name": "install",
      "description": "Install project dependencies and update lockfile (non-frozen)",
      "steps": [
        {
          "exec": "pnpm i --no-frozen-lockfile"
        }
      ]
    },
    "install:ci": {
      "name": "install:ci",
      "description": "Install project dependencies using frozen lockfile",
      "steps": [
        {
          "exec": "pnpm i --frozen-lockfile"
        }
      ]
    },
    "package": {
      "name": "package",
      "description": "Creates the distribution package"
    },
    "post-compile": {
      "name": "post-compile",
      "description": "Runs after successful compilation"
    },
    "post-upgrade": {
      "name": "post-upgrade",
      "description": "Runs after upgrading dependencies"
    },
    "pre-compile": {
      "name": "pre-compile",
      "description": "Prepare the project for compilation"
    },
    "test": {
      "name": "test",
      "description": "Run tests",
      "steps": [
        {
          "exec": "jest --passWithNoTests --updateSnapshot",
          "receiveArgs": true
        }
      ]
    },
    "test:watch": {
      "name": "test:watch",
      "description": "Run jest in watch mode",
      "steps": [
        {
          "exec": "jest --watch"
        }
      ]
    },
    "upgrade": {
      "name": "upgrade",
      "description": "upgrade dependencies",
      "env": {
        "CI": "0"
      },
      "steps": [
        {
          "exec": "pnpx npm-check-updates@16 --upgrade --target=minor --peer --dep=dev,peer,prod,optional --filter=@types/jest,@types/react,@types/react-dom,@types/uuid,@typescript-eslint/eslint-plugin,@typescript-eslint/parser,@vitejs/plugin-react,electron,electron-builder,eslint,eslint-plugin-react-hooks,eslint-plugin-react-refresh,jest,projen,ts-jest,typescript,vite,vite-plugin-electron,vite-plugin-electron-renderer,@emotion/react,@emotion/styled,@fontsource/roboto,@hookform/resolvers,@lib/schema,@mui/icons-material,@mui/lab,@mui/material,@mui/x-data-grid,axios,localforage,match-sorter,react,react-dom,react-hook-form,react-imask,react-router-dom,sort-by,uuid,zustand"
        },
        {
          "exec": "pnpm i --no-frozen-lockfile"
        },
        {
          "exec": "pnpm update @types/jest @types/node @types/react @types/react-dom @types/uuid @typescript-eslint/eslint-plugin @typescript-eslint/parser @vitejs/plugin-react constructs electron electron-builder eslint eslint-plugin-react-hooks eslint-plugin-react-refresh jest jest-junit projen ts-jest typescript vite vite-plugin-electron vite-plugin-electron-renderer @emotion/react @emotion/styled @fontsource/roboto @hookform/resolvers @lib/schema @mui/icons-material @mui/lab @mui/material @mui/x-data-grid axios localforage match-sorter react react-dom react-hook-form react-imask react-router-dom sort-by uuid zustand"
        },
        {
          "exec": "npx projen"
        },
        {
          "spawn": "post-upgrade"
        }
      ]
    },
    "watch": {
      "name": "watch",
      "description": "Watch & compile in the background",
      "steps": [
        {
          "exec": "tsc --build -w"
        }
      ]
    }
  },
  "env": {
    "PATH": "$(pnpm -c exec \"node --print process.env.PATH\")"
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \"npx projen\"."
}
